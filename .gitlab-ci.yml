workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'

stages:
  - build
  - deploy

build:
  image: docker:cli
  stage: build
  before_script:
    - apk add --update --no-cache git
    - . <(printenv CONFIG | grep -v '^#\|^$\|^\s+$' | sed 's/^/export /')
    - export FRAUDULENT_HOSTS_TRAEFIK=$(echo $FRAUDULENT_HOSTS | tr ',' '\n' | awk '{printf "Host(`%s`) || ", $0}' | sed 's/ || $//')
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  script:
    - docker compose build --pull --no-cache
    - docker compose push
    - docker logout $CI_REGISTRY
  environment:
    name: $CI_COMMIT_REF_SLUG

deploy:
  image: docker:cli
  stage: deploy
  before_script:
    - . <(printenv CONFIG | grep -v '^#\|^$\|^\s+$' | sed 's/^/export /')
    - export FRAUDULENT_HOSTS_TRAEFIK=$(echo $FRAUDULENT_HOSTS | tr ',' '\n' | awk '{printf "Host(`%s`) || ", $0}' | sed 's/ || $//')
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  script:
    - docker compose pull
    - docker compose up -d --no-build --force-recreate
  after_script:
    - docker logout $CI_REGISTRY
  variables:
    COMPOSE_PROJECT_NAME: ${CI_PROJECT_NAME}_${CI_COMMIT_REF_SLUG}
  environment:
    name: $CI_COMMIT_REF_SLUG
    url: $WEB_URL
    on_stop: stop

stop:
  image: docker:cli
  stage: deploy
  before_script:
    - . <(printenv CONFIG | grep -v '^#\|^$\|^\s+$' | sed 's/^/export /')
    - export FRAUDULENT_HOSTS_TRAEFIK=$(echo $FRAUDULENT_HOSTS | tr ',' '\n' | awk '{printf "Host(`%s`) || ", $0}' | sed 's/ || $//')
  script:
    - docker compose down
    - docker stop phishingator-${ORG}-web
    - docker stop phishingator-${ORG}-waf
    - docker stop phishingator-${ORG}-database
    - docker stop phishingator-${ORG}-ldap
    - docker stop phishingator-${ORG}-scheduler
  environment:
    name: $CI_COMMIT_REF_SLUG
    action: stop
  when: manual